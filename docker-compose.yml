# En cours :
#   docker-compose exec api make -f config/docker-dev test
#   fill_es_index development.ini


# read this : 
# https://www.elastic.co/fr/blog/removal-of-mapping-types-elasticsearch
# https://github.com/sabricot/django-elasticsearch-dsl/issues/134#issuecomment-482149563

version: "3.7"
services:
  api:
    build:
      context: .
      dockerfile: dev_api.Dockerfile
    depends_on:
      - postgresql
      - elasticsearch
      - redis
    ports:
      - 6543:6543
    environment:
      db_host: 'postgresql'
      tests_db_host: 'postgresql'
      elasticsearch_host: 'elasticsearch'
      tests_elasticsearch_host: 'elasticsearch'
      redis_url: 'redis://redis:6379/'
      version: ''
    volumes:
      - ./es_migration:/var/www/es_migration
      - ./alembic_migration:/var/www/alembic_migration
      - ./c2corg_api:/var/www/c2corg_api
      - ./Makefile:/var/www/Makefile
      - ./common.ini.in:/var/www/common.ini.in
      - ./development.ini.in:/var/www/development.ini.in
      - ./test.ini.in:/var/www/test.ini.in
      - ./config/docker-dev:/var/www/config/docker-dev
      - ./dev-requirements.txt:/var/www/dev-requirements.txt
    command: make -f config/docker serve
    links:
      - postgresql
      - elasticsearch
      - redis

  postgresql:
    # TODO : trouver un moyen de lancer ca
    #     docker-compose exec postgresql /v6_api/scripts/create_user_db_test.sh
    build:
      context: .
      dockerfile: dev_db.Dockerfile
    environment:
      PGDATA: '/c2corg_anon'
    volumes:
      - ./docker-compose/pgsql-settings.d/:/c2corg_anon/pgsql-settings.d/
      - .:/v6_api
    ports:
      - 5432:5432

  elasticsearch:
    # TODO : trouver un moyen de lancer ca : 
    #   docker-compose exec api initialize_c2corg_api_es development.ini
    #   docker-compose exec api make -f config/docker run-syncer
    image: 'elasticsearch:7.1.0'
    ports:
      - 9200:9200
    environment:
      discovery.type: 'single-node'  # needed for ES start : https://github.com/elastic/elasticsearch/issues/25067

  redis:
    image: 'docker.io/redis:3.2'
    ports:
      - 6379:6379
